#include <iostream>
#include <vector>
#include <string>
#include "../Headers/Maze.h"
#include "../Headers/Heuristic.h"

using namespace std;

/*
List of commands
g++ -c Heuristic.cpp Piece.cpp main.
cpp && g++ Heuristic.o Piece.o main.o -o my_program && ./my_progr
am
rm Heuristic.o main.o my_program
*/

bool testSlidable(){
    

    return false;
}

int main(){
    // Piece piece(3,4, 'c');
    // piece.toString();

    // cout << straightLine(3,4, 1,2) << endl;
    // char maze[16][21] = {			
	// 			{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},	// 1
	// 			{'X','O',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','O',' ',' ','X'},	// 2
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','X'},	// 3
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X','O','O','X',' ',' ','X',' ',' ','X',' ','X'},	// 4
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X','O','O','X',' ',' ','X',' ',' ','X',' ','X'},	// 5
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','O','X',' ',' ','X',' ','X'},	// 6
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','X'},	// 7
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','X'},	// 8
	// 			{'X','O',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','X'},	// 9
	// 			{'X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ',' ','X',' ','X'},	// 10
	// 			{'X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X'},	// 11
	// 			{'X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X'},	// 12
	// 			{'X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X'},	// 13
	// 			{'X',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','X'},	// 14
	// 			{'X','W','W','W','W','W','W','W','W',' ',' ',' ','G','G','G','G','G','G','G','G','X'},	// 15                                                          {'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},	// 16
    //         };
    
    Maze maze;
    maze.toString();

    return 0;
}
